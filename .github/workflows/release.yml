name: Multi-Arch Build
on:
  push:
    tags:
      - "v*"
env:
  CARGO_TERM_COLOR: always
  BIN_NAME: "lokipool"

jobs:
  build:
    name: Build ${{ matrix.build }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux-x64, linux-arm64, macos-x64, macos-arm64, windows]
        include:
          # Linux x86_64 (musl静态编译)
          - build: linux-x64
            os: ubuntu-22.04
            target: x86_64-unknown-linux-musl
            release-suffix: x86_64-linux.tar.gz
            setup: |
              sudo apt-get update
              sudo apt-get install -y musl-tools libssl-dev pkg-config

          # Linux ARM64 (musl静态编译)
          - build: linux-arm64
            os: ubuntu-22.04
            target: aarch64-unknown-linux-musl
            release-suffix: aarch64-linux.tar.gz
            setup: |
              sudo apt-get update
              sudo apt-get install -y gcc-aarch64-linux-gnu libssl-dev pkg-config

          # macOS Intel
          - build: macos-x64
            os: macos-14
            target: x86_64-apple-darwin
            release-suffix: x86_64-macos.tar.gz

          # macOS ARM64
          - build: macos-arm64
            os: macos-14  # GitHub已支持M1 Runner
            target: aarch64-apple-darwin
            release-suffix: arm64-macos.tar.gz

          # Windows
          - build: windows
            os: windows-2022
            target: x86_64-pc-windows-msvc
            release-suffix: x86_64-windows.7z

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: Setup Dependencies
        if: matrix.setup != ''
        run: ${{ matrix.setup }}

      - name: Build Release
        run: |
          cargo build --release --target ${{ matrix.target }} \
            --config=target.${{ matrix.target }}.rustflags='["-C", "target-feature=+crt-static"]'
        env:
          PKG_CONFIG_ALLOW_CROSS: 1
          OPENSSL_STATIC: 1  # 强制OpenSSL静态编译[5](@ref)
          RUSTFLAGS: "-C target-feature=+crt-static"

      - name: Strip Symbols (Unix)
        if: contains(matrix.os, 'ubuntu') || contains(matrix.os, 'macos')
        run: strip "target/${{ matrix.target }}/release/${{ env.BIN_NAME }}"

      - name: Package Artifacts
        run: |
          mkdir -p dist temp
          cp LICENSE README.md target/${{ matrix.target }}/release/${{ env.BIN_NAME }}* temp/
          cd temp
          if [[ "${{ matrix.build }}" == windows* ]]; then
            7z a -r "../dist/${{ env.BIN_NAME }}-${{ github.ref_name }}-${{ matrix.release-suffix }}" *
          else
            tar czf "../dist/${{ env.BIN_NAME }}-${{ github.ref_name }}-${{ matrix.release-suffix }}" *
          fi

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          draft: false
